<?xml version='1.0' encoding='UTF-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value lines="1" type="filename">subduction</string_value>
        </file>
        <cell>
          <string_value lines="1">triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">subduction</string_value>
    </output_base_name>
    <visualization>
      <element name="P1DG">
        <family>
          <string_value lines="1">DG</string_value>
        </family>
        <degree>
          <integer_value rank="0">1</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods/>
    <detectors>
      <point name="SlabPoint">
        <real_value shape="2" dim1="dim" rank="1">60 -60</real_value>
      </point>
      <array name="Wedge">
        <python>
          <string_value lines="20" type="code" language="python3">def val():
  from numpy import arange
  coords = []
  for i in arange(54.0,120.0+6.0, 6.0):
    for j in arange(-54.0, -i-6.0, -6.0):
      coords.append([i,j])
  return coords
</string_value>
        </python>
      </array>
      <array name="Slab">
        <python>
          <string_value lines="20" type="code" language="python3">def val():
  from numpy import arange
  coords = []
  for i in arange(0.0,210.0+6.0, 6.0):
    coords.append([i,-i])
  return coords
</string_value>
        </python>
      </array>
    </detectors>
  </io>
  <global_parameters>
    <ufl>
      <string_value lines="20" type="code" language="python3">d     = 1000.0
v0    = 0.05/(365.*24.*60.*60.)
kappa = 0.7272e-6
kappaprime = kappa/(d*v0)

etamax = 1.e26
Adiff = 1.32043e9
Ediff = 335.e3
R = 8.3145
etadiff = Adiff*exp(Ediff/(R*T_i))
etaeff  = (etamax*etadiff)/(etamax + etadiff)
etascale = 1.e21
etaprime = etaeff/etascale

dx_crust  = dx(86)
dx_fluid  = dx(98)
dx_wedge  = dx(88)
dx_slabu  = dx(93)
dx_slabf  = dx(102)
dx_slabl  = dx(106)
dx_mantle = dx(89)

dS_surface = dS(93)
dS_crustr  = dS(94)
dS_wedger  = dS(95)
dS_wedgeb  = dS(96)
dS_wedget  = dS(99)
dS_fluidt  = dS(110)
dS_fluidr  = dS(111)
dS_mantlel = dS(98)
dS_mantler = dS(97)
dS_slabtu  = dS(102)
dS_slabtc  = dS(101)
dS_slabtf  = dS(100)
dS_slabtl  = dS(112)
dS_slabbu  = dS(105)
dS_slabbc  = dS(104)
dS_slabbf  = dS(103)
dS_slabbl  = dS(113)
dS_transtt = dS(108)
dS_transmb = dS(114)
dS_transfr = dS(115)
dS_transdb = dS(107)
</string_value>
    </ufl>
  </global_parameters>
  <system name="Solid">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Temperature">
      <ufl_symbol name="global">
        <string_value lines="1">T</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">273.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="Top">
            <boundary_ids>
              <integer_value shape="1" rank="1">93</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">273.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="WedgeSideIn">
            <boundary_ids>
              <integer_value shape="1" rank="1">95</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">1573.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="SlabSideIn">
            <boundary_ids>
              <integer_value shape="1" rank="1">98</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <python rank="0">
                  <string_value lines="20" type="code" language="python3">def val(X):
  import math
  t_50 = 50.0*1.e6*365*24*60*60
  T0 = 1573.0
  Ts = 273.0
  kappa = 0.7272e-6
  depth = -X[1]*1000.0
  value = Ts + (T0-Ts)*(math.erf(depth/(2.*math.sqrt(kappa*t_50))))
  return value
</string_value>
                </python>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="OverRidingSide">
            <boundary_ids>
              <integer_value shape="1" rank="1">94</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <python rank="0">
                  <string_value lines="20" type="code" language="python3">def val(X):
  crust_grad = 0.026*1000.0
  Ts = 273.0
  value = Ts - crust_grad*X[1]
  return value
</string_value>
                </python>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <field name="Velocity">
      <ufl_symbol name="global">
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="NotWedge">
            <region_ids>
              <integer_value shape="2" rank="1">86 89</integer_value>
            </region_ids>
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <initial_condition type="initial_condition" name="Wedge">
            <region_ids>
              <integer_value shape="2" rank="1">88 98</integer_value>
            </region_ids>
            <python rank="1">
              <string_value lines="20" type="code" language="python3">def val(X):
  from math import sqrt, sin, cos, atan
  plate_thickness = 50.0
  values = [] 
  depth = -plate_thickness - X[1];
  xdist = X[0] - plate_thickness;
  if (xdist == 0.):
    xdist = 0.000000000000001
  if (depth == 0.0):
    values.append(0.0)
    values.append(0.0)
    return values
  alfa = atan(1.0);
  theta = atan(depth/xdist);
  vtheta = -((alfa - theta)*sin(theta)*sin(alfa) - (alfa*theta*sin(alfa-theta))) / (alfa**2 - (sin(alfa))**2);
  vr = (((alfa-theta)*cos(theta)*sin(alfa)) - (sin(alfa)*sin(theta)) - (alfa*sin(alfa-theta)) + (alfa*theta*cos(alfa-theta)))/(alfa**2 - (sin(alfa))**2);
  values.append(- (vtheta*sin(theta) - vr*cos(theta)));
  values.append(- (vtheta*cos(theta) + vr*sin(theta)));
  return values
</string_value>
            </python>
          </initial_condition>
          <boundary_condition name="Coupling">
            <boundary_ids>
              <integer_value shape="1" rank="1">101</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant name="dim">
                  <real_value shape="2" dim1="dim" rank="1">0.7071067811865476 -0.7071067811865476</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="SlabTop">
            <boundary_ids>
              <integer_value shape="2" rank="1">100 112</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant name="dim">
                  <real_value shape="2" dim1="dim" rank="1">0.7071067811865476 -0.7071067811865476</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="WedgeTop">
            <boundary_ids>
              <integer_value shape="2" rank="1">99 110</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant name="dim">
                  <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Pressure">
      <ufl_symbol name="global">
        <string_value lines="1">p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="SlabVelocity">
      <ufl_symbol name="global">
        <string_value lines="1">vp</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.7071067811865476 -0.7071067811865476</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="ZeroRHS">
      <ufl_symbol name="global">
        <string_value lines="1">z</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="Preliminary">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python3">bT_crust = inner(grad(T_t), kappaprime*grad(T_a))
bT_wedge = T_t*inner(v_i, grad(T_a))  + inner(grad(T_t), kappaprime*grad(T_a))
bT_slab  = T_t*inner(vp_i, grad(T_a)) + inner(grad(T_t), kappaprime*grad(T_a))
bT_dummy = T_t*z_i

F  = bT_crust*dx_crust
F += bT_wedge*dx_fluid
F += bT_wedge*dx_wedge
F += bT_slab*dx_slabu
F += bT_slab*dx_slabf
F += bT_slab*dx_slabl
F += bT_slab*dx_mantle
F += bT_dummy*dx_crust

bv = inner(v_t, (v_a-v_n))

F += bv*dx_fluid
F += bv*dx_wedge

bp = p_t*(p_a-p_n)

F += bp*dx_fluid
F += bp*dx_wedge
</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python3">a = lhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python3">L = rhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python3">res = action(a, us_i) - L
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">50</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="Temperature">
              <field name="Temperature"/>
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="lu">
                  <factorization_package name="umfpack"/>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="Projection">
              <field name="Velocity">
                <region_ids>
                  <integer_value shape="2" rank="1">88 98</integer_value>
                </region_ids>
              </field>
              <field name="Pressure">
                <region_ids>
                  <integer_value shape="2" rank="1">88 98</integer_value>
                </region_ids>
              </field>
              <monitors/>
              <linear_solver>
                <iterative_method name="cg">
                  <relative_error>
                    <real_value rank="0">1.e-6</real_value>
                  </relative_error>
                  <max_iterations>
                    <integer_value rank="0">100</integer_value>
                  </max_iterations>
                  <nonzero_initial_guess/>
                  <monitors/>
                </iterative_method>
                <preconditioner name="sor"/>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="EverythingElse">
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="none"/>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
          <monitors>
            <view_ksp/>
          </monitors>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python3">bT_crust = inner(grad(T_t), kappaprime*grad(T_a))
bT_wedge = T_t*inner(v_i, grad(T_a))  + inner(grad(T_t), kappaprime*grad(T_a))
bT_slab  = T_t*inner(vp_i, grad(T_a)) + inner(grad(T_t), kappaprime*grad(T_a))
bT_dummy = T_t*z_i

F  = bT_crust*dx_crust
F += bT_wedge*dx_fluid
F += bT_wedge*dx_wedge
F += bT_slab*dx_slabu
F += bT_slab*dx_slabf
F += bT_slab*dx_slabl
F += bT_slab*dx_mantle
F += bT_dummy*dx_crust

bv_wedge = inner(sym(grad(v_t)), 2*etaprime*sym(grad(v_a))) - div(v_t)*p_a

F += bv_wedge*dx_fluid
F += bv_wedge*dx_wedge

bp_wedge = p_t*div(v_a)

F += bp_wedge*dx_fluid
F += bp_wedge*dx_wedge
</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python3">a = lhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python3">L = rhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python3">res = action(a, us_i) - L
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">50</integer_value>
        </max_iterations>
        <min_iterations>
          <integer_value rank="0">2</integer_value>
        </min_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="fgmres">
            <restart>
              <integer_value rank="0">30</integer_value>
            </restart>
            <relative_error>
              <real_value rank="0">1.e-12</real_value>
            </relative_error>
            <absolute_error>
              <real_value rank="0">1.e-15</real_value>
            </absolute_error>
            <max_iterations>
              <integer_value rank="0">100</integer_value>
            </max_iterations>
            <nonzero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="WedgeStokesTEverywhere">
              <field name="Temperature"/>
              <field name="Velocity">
                <region_ids>
                  <integer_value shape="2" rank="1">88 98</integer_value>
                </region_ids>
              </field>
              <field name="Pressure">
                <region_ids>
                  <integer_value shape="2" rank="1">88 98</integer_value>
                </region_ids>
              </field>
              <monitors/>
              <linear_solver>
                <iterative_method name="fgmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                  <relative_error>
                    <real_value rank="0">1.e-6</real_value>
                  </relative_error>
                  <absolute_error>
                    <real_value rank="0">1.e-11</real_value>
                  </absolute_error>
                  <max_iterations>
                    <integer_value rank="0">100</integer_value>
                  </max_iterations>
                  <nonzero_initial_guess/>
                  <monitors>
                    <preconditioned_residual/>
                  </monitors>
                </iterative_method>
                <preconditioner name="fieldsplit">
                  <composite_type name="multiplicative"/>
                  <fieldsplit name="Temperature">
                    <field name="Temperature"/>
                    <monitors/>
                    <linear_solver>
                      <iterative_method name="preonly"/>
                      <preconditioner name="lu">
                        <factorization_package name="umfpack"/>
                      </preconditioner>
                    </linear_solver>
                  </fieldsplit>
                  <fieldsplit name="Stokes">
                    <field name="Pressure"/>
                    <field name="Velocity"/>
                    <monitors/>
                    <linear_solver>
                      <iterative_method name="preonly"/>
                      <preconditioner name="lu">
                        <factorization_package name="umfpack"/>
                      </preconditioner>
                    </linear_solver>
                  </fieldsplit>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="EverythingElse">
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="none"/>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
          <monitors>
            <view_ksp/>
          </monitors>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
  </system>
  <system name="Divergence">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">ud</string_value>
    </ufl_symbol>
    <field name="Divergence">
      <ufl_symbol name="global">
        <string_value lines="1">d</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python3">b = d_t*d_a - d_t*div(v_i)
r  = b*dx_fluid
r += b*dx_wedge
</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python3">a = lhs(r)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python3">L = rhs(r)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python3">res = action(a, ud_i) - L
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors>
          <norms/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="Wedge">
              <field name="Divergence">
                <region_ids>
                  <integer_value shape="2" rank="1">88 98</integer_value>
                </region_ids>
              </field>
              <monitors/>
              <linear_solver>
                <iterative_method name="cg">
                  <relative_error>
                    <real_value rank="0">1.e-6</real_value>
                  </relative_error>
                  <max_iterations>
                    <integer_value rank="0">100</integer_value>
                  </max_iterations>
                  <zero_initial_guess/>
                  <monitors>
                    <preconditioned_residual/>
                  </monitors>
                </iterative_method>
                <preconditioner name="sor"/>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="NotWedge">
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="none"/>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
          <monitors>
            <view_ksp/>
          </monitors>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
  </system>
  <system name="Viscosity">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uvisc</string_value>
    </ufl_symbol>
    <field name="Viscosity">
      <ufl_symbol name="global">
        <string_value lines="1">visc</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python3">bvisc = visc_t*visc_a - visc_t*etaprime

F  = bvisc*dx_crust
F += bvisc*dx_fluid
F += bvisc*dx_wedge
F += bvisc*dx_mantle
</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python3">a = lhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python3">L = rhs(F)
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python3">res = action(a, uvisc_i) - L
</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="jacobi"/>
          <monitors/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
  </system>
</terraferma_options>